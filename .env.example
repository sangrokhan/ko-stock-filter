# Korean Stock Trading System - Environment Configuration
# =============================================================================
# IMPORTANT: This is a template file. Copy to .env and fill in actual values.
# Never commit .env file with real credentials to version control!
# =============================================================================

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL connection URL format: postgresql://user:password@host:port/database
DATABASE_URL=postgresql://user:password@localhost:5432/stock_trading

# Database pool settings can be overridden via environment variables
# DATABASE_POOL_SIZE=5
# DATABASE_MAX_OVERFLOW=10

# =============================================================================
# Redis Configuration
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# =============================================================================
# Korean Stock Market API Keys
# =============================================================================

# Korea Investment & Securities API
# Get credentials from: https://www.koreainvestment.com/
KOREAINVESTMENT_API_KEY=
KOREAINVESTMENT_API_SECRET=
KOREAINVESTMENT_APP_KEY=
KOREAINVESTMENT_APP_SECRET=

# KRX (Korea Exchange) API
# Get credentials from: http://data.krx.co.kr/
KRX_API_KEY=

# =============================================================================
# Service URLs (for microservices architecture)
# =============================================================================
DATA_COLLECTOR_URL=http://localhost:8001
INDICATOR_CALCULATOR_URL=http://localhost:8002
STOCK_SCREENER_URL=http://localhost:8003
TRADING_ENGINE_URL=http://localhost:8004
RISK_MANAGER_URL=http://localhost:8005
PRICE_MONITOR_URL=http://localhost:8006

# =============================================================================
# Trading Engine Overrides
# =============================================================================
# Override YAML config values via environment variables
# Use format: TRADING_ENGINE_<section>_<parameter>

# Example: Override risk tolerance
# TRADING_ENGINE_SIGNAL_GENERATOR_RISK_TOLERANCE=2.5

# Example: Override max positions
# TRADING_ENGINE_SIGNAL_VALIDATOR_MAX_POSITIONS=15

# Example: Enable live trading (default is dry_run in YAML)
# TRADING_ENGINE_DRY_RUN=false

# =============================================================================
# Risk Manager Overrides
# =============================================================================
# Example: Override max position size
# RISK_MANAGER_RISK_PARAMETERS_MAX_POSITION_SIZE_PCT=8.0

# Example: Enable circuit breaker
# RISK_MANAGER_ENABLE_CIRCUIT_BREAKER=true

# =============================================================================
# Stock Screener Overrides
# =============================================================================
# Example: Override volatility threshold
# STOCK_SCREENER_THRESHOLDS_MAX_VOLATILITY_PCT=35.0

# Example: Override max P/E ratio
# STOCK_SCREENER_THRESHOLDS_MAX_PER=40.0

# =============================================================================
# Indicator Calculator Overrides
# =============================================================================
# Example: Override RSI period
# INDICATOR_CALCULATOR_INDICATORS_RSI_PERIOD=21

# Example: Disable caching
# INDICATOR_CALCULATOR_ENABLE_CACHING=false

# =============================================================================
# Data Collector Overrides
# =============================================================================
# Example: Override market data collection schedule
# DATA_COLLECTOR_SCHEDULER_MARKET_DATA_CRON="0 9-15 * * 1-5"

# Example: Override batch size
# DATA_COLLECTOR_BATCH_SIZE=50

# =============================================================================
# Price Monitor Overrides
# =============================================================================
# Example: Override polling interval
# PRICE_MONITOR_POLL_INTERVAL_SECONDS=30

# Example: Override price change threshold
# PRICE_MONITOR_SIGNIFICANT_CHANGE_THRESHOLD_PCT=3.0

# =============================================================================
# Logging Configuration
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: json or text
LOG_FORMAT=json

# Log file path (leave empty for console only)
LOG_FILE_PATH=

# =============================================================================
# General Application Settings
# =============================================================================
APP_NAME=Korean Stock Trading System
DEBUG=false
ENVIRONMENT=development

# =============================================================================
# Notification Settings (Optional)
# =============================================================================
# Slack webhook for trading alerts
SLACK_WEBHOOK_URL=

# Email notifications
SMTP_HOST=
SMTP_PORT=587
SMTP_USERNAME=
SMTP_PASSWORD=
ALERT_EMAIL_FROM=
ALERT_EMAIL_TO=

# =============================================================================
# Monitoring & Observability (Optional)
# =============================================================================
# Prometheus metrics endpoint
ENABLE_METRICS=false
METRICS_PORT=9090

# Sentry error tracking
SENTRY_DSN=

# =============================================================================
# Testing & Development
# =============================================================================
# Force paper trading mode (overrides all configs)
FORCE_PAPER_TRADING=true

# Enable debug mode
DEBUG=false

# =============================================================================
# Notes
# =============================================================================
# 1. Environment variables override YAML configuration values
# 2. Nested YAML config can be accessed via underscore notation:
#    Example: risk_parameters.max_position_size_pct becomes
#             RISK_MANAGER_RISK_PARAMETERS_MAX_POSITION_SIZE_PCT
# 3. Boolean values: true/false, yes/no, 1/0, on/off
# 4. Keep sensitive data (API keys, passwords) in .env only
# 5. Keep non-sensitive parameters in YAML files for easier management
